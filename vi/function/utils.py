import re
import requests


PUNCTUATION = [":", ".", "!", "?"]


def truncate_text(text: str, max_len: int):
    if len(text) > max_len:
        text = text[:max_len]
        while text and text[-1] not in PUNCTUATION:
            text = text[:-1]

    return text


def is_contain_keyword_regex(text, reg_list):
    text = text.replace('_',' ').lower()
    if not reg_list:
        return True
    for reg in reg_list:
        search_res = re.search(reg,text,re.I)
        if search_res:
            return True
    return False


def normalize_text(text: str):
    text = re.sub(r"\s\s+", " ", text).strip()
    text = re.sub(r"\b[^ \t]*\.[^A-Z0-9\s]+", "", text)

    text = text.replace("üèª", "")
    text.replace(");this.closest('table').remove();", "")
    text = re.sub(
        "(Th·ª© .{2,4}|Ch·ªß nh·∫≠t),( ng√†y)? \d{1,2}\/\d{1,2}\/\d{4}( \d{1,2}:\d{1,2})?( AM| PM)?( \(GMT.{1,3}\))?",
        "",
        text,
    )

    text = re.sub("\(.*(·∫¢nh|Ngu·ªìn).*?\)", "", text)
    text = re.sub("\d{1,2} (gi·ªù|ph√∫t) tr∆∞·ªõc", "", text)
    text = re.sub(r"http\S+", "", text)
    text = re.sub("(\\r)*( )*(\\n)*( )*(\\r)*( )*(\\n)", ".", text)
    text = re.sub(r"\.( )*(\.)+", ". ", text)
    text = re.sub("\.(?!\d)", ". ", text)
    text = re.sub("(\.(\s)+)+", ". ", text)
    text = re.sub("<[^<]+?>", "", text)
    text = re.sub("\d{1,2}:\d{2}( )?\d{1,2}\/\d{1,2}\/\d{4}", "", text)
    text = re.sub("·∫¢nh(:)?(Getty)?", "", text)

    text = re.sub("\(·∫£nh:.*?\)", ".", text)
    text = re.sub("(\| )?(\(.{1,7}\)( )?)+$", "", text)
    text = re.sub(
        "\d{2} [\w]{3,4}, \d{4}. \d{2}.\d{2} (AM|PM) IST", "", text
    )  # 02 Mar, 2022, 10.01 AM IST
    text = re.sub("\d{2}\/\d{2}\/\d{4} \d{2}:\d{2} GMT(\+|-)\d{1,2}", "", text)
    # text = re.sub("\(.*(Photo|·∫¢nh|Images|Image|theo|ngu·ªìn).*\)", "", text, flags=re.I)
    text = re.sub("[A-Z].{5,10} , \d{2}:\d{2} (GMT(\+|-)\d{1,2})?", "", text)

    text = re.sub("^\d{1,10} minutes ago", "", text)
    text = re.sub("^\d{1,10} hours ago", "", text)
    text = re.sub("^\d{1,10} days ago", "", text)
    text = re.sub("^\d{1,10} years ago", "", text)
    text = re.sub("^\d{1,10} months ago", "", text)
    text = re.sub("^\d{1,10} minute ago", "", text)
    text = re.sub("^\d{1,10} day ago", "", text)
    text = re.sub("^\d{1,10} year ago", "", text)
    text = re.sub("^\d{1,10} month ago", "", text)
    text = re.sub("^\d{1,10} hour ago", "", text)
    text = re.sub("^(a|an) minute ago", "", text)
    text = re.sub("^(a|an) hour ago", "", text)
    text = re.sub("^(a|an) day ago", "", text)
    text = re.sub("^(a|an) month ago", "", text)
    text = re.sub("^(a|an) year ago", "", text)

    text = re.sub("\s+", " ", text)
    text = re.sub("ƒê·ªçc chi ti·∫øt b√†i vi·∫øt t·∫°i ƒë√¢y.*", "", text, flags=re.I)
    text = re.sub("(\d{1,2}:\d{2}( )*)\|( )*\d{1,2}(/|-)\d{2}(/|-)\d{4}", "", text)

    text = re.sub(
        "((ch·ªß nh·∫≠t)|(th·ª© b·∫£y)|(th·ª≠ s√°u)|(th·ª© nƒÉm)|(th·ª© t∆∞)|(th·ª© ba)|(th·ª© hai))([(\d)(\:)(,)(\|\/)(\s+)]+)((VOV)|(VTV))$",
        "",
        text,
        flags=re.I,
    )  # v√† Ukraine ƒë·ªÉ gi·∫£i quy·∫øt xung ƒë·ªôt Ch·ªß Nh·∫≠t, 06:32, 20/03/2022 VOV.

    text = re.sub(
        "^((\d)|(\:)|(\.)|(\|)|(\s+)|(in b√†i bi·∫øt)|(in b√†i vi·∫øt)|(\/))+",
        "",
        text,
        flags=re.I,
    )  # 10:20 | 09/03/2022 In b√†i bi·∫øt. 10:20 | 09/03/2022 In b√†i bi·∫øt Vi·ªác xu·∫•t kh·∫©u t√¥m sang th·ªã tr∆∞·ªùng Nga

    text = text.replace("|", "")
    text = re.sub("^.*?(Link ngu·ªìn)", "", text, flags=re.I)  # (

    text = re.sub("(a|p)\. m\.", "", text)
    text = re.sub("This article was last updated at \d{1,2}:\d{2} (GMT/UTC)?", "", text)

    text = re.sub("(\* )m·ªùi qu√Ω ƒë·ªôc gi·∫£ .{5,}", "", text, flags=re.I)
    text = re.sub(
        "Updated:.{3,10} \d{1,2}, \d{0,4} \d{1,2}:\d{2}:\d{2} (am|pm)?", "", text
    )

    text = re.sub("^vn.( )?}", "", text)
    text = re.sub("^AFP.", "", text)
    text = re.sub("AA.", "", text)
    text = re.sub("^AFP.", "", text)
    text = re.sub("Il y a \d{1,5} heures( \. )?", "", text)
    text = (
        text.replace("Xem ti·∫øp>>>", "")
        .replace('"', '"')
        .replace("‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤ .", "")
        .replace(
            "- ·∫¢nh th·ªùi s·ª± qu·ªëc t·∫ø - Ch√≠nh tr·ªã-Qu√¢n s·ª± - Th√¥ng t·∫•n x√£ Vi·ªát Nam (TTXVN)",
            "",
        )
        .replace("TTXVN ph√°t", "")
        .replace("| thefastnewz", "")
        .replace("| Swotverge", "")
        .replace("- VietBF", "")
        .replace("TH√îNG LU·∫¨N - ", "")
        .replace("vn. ", "")
        .replace("minh ho·∫°: Getty", "")
    )

    text = re.sub("/detail/[^\s]*", "", text)
    text = re.sub(
        "ƒêi·ªán tho·∫°i:.{1,80}$", "", text
    )  # ƒêi·ªán tho·∫°i:0242 248 7575, Hotline:0982 737679 Email:info@investglobal
    text = re.sub(
        "Use Next and Previous buttons to navigate (\d{1,2} )?(\d{1,2}of\d{1,2})?",
        "",
        text,
        flags=re.I,
    )
    text = re.sub(
        "(Advertisement)? \d{1,5} (Story continues below)? (This advertisement has not loaded yet, but your article continues below.)",
        "",
        text,
        flags=re.I,
    )
    text = re.sub("Photo by .{1,15}/Article content W", "", text, flags=re.I)
    text = re.sub("\(photo by .*?\)", "", text, flags=re.I)

    if text and text[-1] not in PUNCTUATION:
        text = text + "."

    return text
